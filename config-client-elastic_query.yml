elastic-query-service:
  version: v1
  custom-audience: elastic-query-service

server:
  port: 8183
  servlet:
    context-path: /elastic-query-service

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081/auth/realms/microservices-realm
          jwk-set-uri: http://localhost:8081/auth/realms/microservices-realm/protocol/openid-connect/certs
  jpa:
    open-in-view: false
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL9Dialect
    datasource:
      url: jdbc:postgresql://localhost:5432/postgres?currentSchema=public&binaryTransfer=true&reWriteBatchedInserts=true
      username: postgres
      password: '{cipher}c71993b0fa35bb5b3b416390a86655be4236554c292c6fab45c412bd9b26a22d'
      driver-class-name: org.postgresql.Driver
      platform: postgres
      schema: classpath:init-schema.sql
      data: classpath:init-data.sql
      initialization-mode: always

elastic-query-config:
  text-field: text

elastic-config:
  index-name: twitter-index
  connection-url: http://localhost:9200
  connect-timeout-ms: 5000
  socket-timeout-ms: 30000

user-config:
  username: test
  password: '{cipher}a01c4dfcded4e237881d5e03a2aaaf35951e05cf66191fcbd8880714486c2997'
  roles: USER

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

security:
  paths-to-ignore: /api-docs